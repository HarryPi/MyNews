apply plugin: 'com.android.application'
android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.example.harry.mynews"
        minSdkVersion 22
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support:design:27.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.google.firebase:firebase-auth:11.8.0'
    implementation 'com.android.support:recyclerview-v7:27.1.0'
    androidTestCompile 'com.google.code.findbugs:jsr305:3.0.1'
    // Volley
    implementation 'com.android.volley:volley:1.1.0'
    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    // Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'
    // ok3http
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    // buterknife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    // Dagger 2
    def daggerVersion = '2.11'

    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"

    // end dagger 2
    // Gson
    implementation 'com.google.code.gson:gson:2.8.1'
    //RX/Java
    implementation 'io.reactivex.rxjava2:rxjava:2.0.2'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    //
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation 'com.firebaseui:firebase-ui-database:3.2.2'
// FirebaseUI for Cloud Firestore
    implementation 'com.firebaseui:firebase-ui-firestore:3.2.2'

// FirebaseUI for Cloud Storage
    implementation 'com.firebaseui:firebase-ui-storage:3.2.2'
    implementation 'com.firebaseui:firebase-ui-auth:3.2.2'

    // Required only if Facebook login support is required
    implementation 'com.facebook.android:facebook-login:4.31.0'

    // Required only if Twitter login support is required
    implementation("com.twitter.sdk.android:twitter-core:3.0.0@aar") { transitive = true }
}



apply plugin: 'com.google.gms.google-services'